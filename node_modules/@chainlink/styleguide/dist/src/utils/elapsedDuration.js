const MS_IN_SECOND = 1000;
const SECONDS_IN_MINUTE = 60;
const SECONDS_IN_HOUR = 3600;
export function elapsedDuration(createdAt, finishedAt) {
    if (createdAt === '' && finishedAt === '') {
        return '';
    }
    const es = elapsedSeconds(new Date(createdAt), new Date(finishedAt));
    const hours = Math.floor(es / SECONDS_IN_HOUR);
    const minutes = Math.floor((es % SECONDS_IN_HOUR) / SECONDS_IN_MINUTE);
    const seconds = Math.ceil((es % SECONDS_IN_HOUR) % SECONDS_IN_MINUTE);
    return format(hours, minutes, seconds);
}
function elapsedSeconds(from, to) {
    return to.getTime() / MS_IN_SECOND - from.getTime() / MS_IN_SECOND;
}
function format(hours, minutes, seconds) {
    return `${hours ? `${hours}h` : ''}${minutes ? `${minutes}m` : ''}${seconds}s`;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxhcHNlZER1cmF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2VsYXBzZWREdXJhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUE7QUFDekIsTUFBTSxpQkFBaUIsR0FBRyxFQUFFLENBQUE7QUFDNUIsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFBO0FBWTVCLE1BQU0sVUFBVSxlQUFlLENBQzdCLFNBQW9CLEVBQ3BCLFVBQXFCO0lBRXJCLElBQUksU0FBUyxLQUFLLEVBQUUsSUFBSSxVQUFVLEtBQUssRUFBRSxFQUFFO1FBQ3pDLE9BQU8sRUFBRSxDQUFBO0tBQ1Y7SUFFRCxNQUFNLEVBQUUsR0FBRyxjQUFjLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQTtJQUNwRSxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsR0FBRyxlQUFlLENBQUMsQ0FBQTtJQUM5QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxHQUFHLGVBQWUsQ0FBQyxHQUFHLGlCQUFpQixDQUFDLENBQUE7SUFDdEUsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsR0FBRyxlQUFlLENBQUMsR0FBRyxpQkFBaUIsQ0FBQyxDQUFBO0lBRXJFLE9BQU8sTUFBTSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUE7QUFDeEMsQ0FBQztBQUVELFNBQVMsY0FBYyxDQUFDLElBQVUsRUFBRSxFQUFRO0lBQzFDLE9BQU8sRUFBRSxDQUFDLE9BQU8sRUFBRSxHQUFHLFlBQVksR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsWUFBWSxDQUFBO0FBQ3BFLENBQUM7QUFFRCxTQUFTLE1BQU0sQ0FBQyxLQUFhLEVBQUUsT0FBZSxFQUFFLE9BQWU7SUFDN0QsT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLE9BQU8sR0FBRyxDQUFBO0FBQ2hGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBNU19JTl9TRUNPTkQgPSAxMDAwXG5jb25zdCBTRUNPTkRTX0lOX01JTlVURSA9IDYwXG5jb25zdCBTRUNPTkRTX0lOX0hPVVIgPSAzNjAwXG5cbi8qKlxuICogQSBzdHJpbmcsIG9yIGEgbnVtYmVyIHRoYXQgY2FuIGJlIGNvbnZlcnRlZCB0byBhIERhdGUgdXNpbmcgYG5ldyBEYXRlKC4uLilgIGUuZy5cbiAqXG4gKiBzdHJpbmc6IDIwMjAtMDEtMDNUMjI6NDU6MDAuMTY2MjYxWlxuICogbnVtYmVyOiAxNTc4MDkxNTAwMTY2XG4gKlxuICogQHR5cGVkZWYgeyhudW1iZXJ8c3RyaW5nKX0gRGF0ZVZhbHVlXG4gKi9cbmV4cG9ydCB0eXBlIERhdGVWYWx1ZSA9IHN0cmluZyB8IG51bWJlclxuXG5leHBvcnQgZnVuY3Rpb24gZWxhcHNlZER1cmF0aW9uKFxuICBjcmVhdGVkQXQ6IERhdGVWYWx1ZSxcbiAgZmluaXNoZWRBdDogRGF0ZVZhbHVlLFxuKTogc3RyaW5nIHtcbiAgaWYgKGNyZWF0ZWRBdCA9PT0gJycgJiYgZmluaXNoZWRBdCA9PT0gJycpIHtcbiAgICByZXR1cm4gJydcbiAgfVxuXG4gIGNvbnN0IGVzID0gZWxhcHNlZFNlY29uZHMobmV3IERhdGUoY3JlYXRlZEF0KSwgbmV3IERhdGUoZmluaXNoZWRBdCkpXG4gIGNvbnN0IGhvdXJzID0gTWF0aC5mbG9vcihlcyAvIFNFQ09ORFNfSU5fSE9VUilcbiAgY29uc3QgbWludXRlcyA9IE1hdGguZmxvb3IoKGVzICUgU0VDT05EU19JTl9IT1VSKSAvIFNFQ09ORFNfSU5fTUlOVVRFKVxuICBjb25zdCBzZWNvbmRzID0gTWF0aC5jZWlsKChlcyAlIFNFQ09ORFNfSU5fSE9VUikgJSBTRUNPTkRTX0lOX01JTlVURSlcblxuICByZXR1cm4gZm9ybWF0KGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzKVxufVxuXG5mdW5jdGlvbiBlbGFwc2VkU2Vjb25kcyhmcm9tOiBEYXRlLCB0bzogRGF0ZSk6IG51bWJlciB7XG4gIHJldHVybiB0by5nZXRUaW1lKCkgLyBNU19JTl9TRUNPTkQgLSBmcm9tLmdldFRpbWUoKSAvIE1TX0lOX1NFQ09ORFxufVxuXG5mdW5jdGlvbiBmb3JtYXQoaG91cnM6IG51bWJlciwgbWludXRlczogbnVtYmVyLCBzZWNvbmRzOiBudW1iZXIpOiBzdHJpbmcge1xuICByZXR1cm4gYCR7aG91cnMgPyBgJHtob3Vyc31oYCA6ICcnfSR7bWludXRlcyA/IGAke21pbnV0ZXN9bWAgOiAnJ30ke3NlY29uZHN9c2Bcbn1cbiJdfQ==