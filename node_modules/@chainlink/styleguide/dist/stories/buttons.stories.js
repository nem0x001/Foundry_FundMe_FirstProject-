import Button from '@material-ui/core/Button';
import { createMuiTheme } from '@material-ui/core/styles';
import { storiesOf } from '@storybook/react';
import React from 'react';
import { muiTheme } from 'storybook-addon-material-ui';
import { theme } from '../src';
const customTheme = createMuiTheme(theme);
storiesOf('Buttons', module)
    .addDecorator(muiTheme([customTheme]))
    .add('Contained', () => (React.createElement(React.Fragment, null,
    React.createElement(Button, { variant: "contained" }, "Default Button"),
    React.createElement(Button, { variant: "contained", color: "primary" }, "Primary Button"),
    React.createElement(Button, { variant: "contained", color: "secondary" }, "Secondary"),
    React.createElement(Button, { variant: "contained", color: "secondary", disabled: true }, "Disabled"),
    React.createElement(Button, { variant: "contained", href: "#contained-buttons" }, "Link"),
    React.createElement("input", { accept: "image/*", id: "contained-button-file", multiple: true, type: "file" }),
    React.createElement("label", { htmlFor: "contained-button-file" },
        React.createElement(Button, { variant: "contained", component: "span" }, "Upload")))))
    .add('Outlined', () => (React.createElement(React.Fragment, null,
    React.createElement(Button, { variant: "outlined" }, "Default Button"),
    React.createElement(Button, { variant: "outlined", color: "primary" }, "Primary Button"),
    React.createElement(Button, { variant: "outlined", color: "secondary" }, "Secondary"),
    React.createElement(Button, { variant: "outlined", color: "secondary", disabled: true }, "Disabled"),
    React.createElement(Button, { variant: "outlined", href: "#outlined-buttons" }, "Link"),
    React.createElement("input", { accept: "image/*", id: "outlined-button-file", multiple: true, type: "file" }),
    React.createElement("label", { htmlFor: "outlined-button-file" },
        React.createElement(Button, { variant: "outlined", component: "span" }, "Upload")))));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9ucy5zdG9yaWVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3Rvcmllcy9idXR0b25zLnN0b3JpZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sTUFBTSxNQUFNLDBCQUEwQixDQUFBO0FBQzdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQTtBQUN6RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFDNUMsT0FBTyxLQUFLLE1BQU0sT0FBTyxDQUFBO0FBQ3pCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQTtBQUN0RCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sUUFBUSxDQUFBO0FBRTlCLE1BQU0sV0FBVyxHQUFHLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQTtBQUV6QyxTQUFTLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQztLQUN6QixZQUFZLENBQUMsUUFBUSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztLQUNyQyxHQUFHLENBQUMsV0FBVyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQ3RCLG9CQUFDLEtBQUssQ0FBQyxRQUFRO0lBQ2Isb0JBQUMsTUFBTSxJQUFDLE9BQU8sRUFBQyxXQUFXLHFCQUF3QjtJQUNuRCxvQkFBQyxNQUFNLElBQUMsT0FBTyxFQUFDLFdBQVcsRUFBQyxLQUFLLEVBQUMsU0FBUyxxQkFFbEM7SUFDVCxvQkFBQyxNQUFNLElBQUMsT0FBTyxFQUFDLFdBQVcsRUFBQyxLQUFLLEVBQUMsV0FBVyxnQkFFcEM7SUFDVCxvQkFBQyxNQUFNLElBQUMsT0FBTyxFQUFDLFdBQVcsRUFBQyxLQUFLLEVBQUMsV0FBVyxFQUFDLFFBQVEscUJBRTdDO0lBQ1Qsb0JBQUMsTUFBTSxJQUFDLE9BQU8sRUFBQyxXQUFXLEVBQUMsSUFBSSxFQUFDLG9CQUFvQixXQUU1QztJQUNULCtCQUFPLE1BQU0sRUFBQyxTQUFTLEVBQUMsRUFBRSxFQUFDLHVCQUF1QixFQUFDLFFBQVEsUUFBQyxJQUFJLEVBQUMsTUFBTSxHQUFHO0lBQzFFLCtCQUFPLE9BQU8sRUFBQyx1QkFBdUI7UUFDcEMsb0JBQUMsTUFBTSxJQUFDLE9BQU8sRUFBQyxXQUFXLEVBQUMsU0FBUyxFQUFDLE1BQU0sYUFFbkMsQ0FDSCxDQUNPLENBQ2xCLENBQUM7S0FDRCxHQUFHLENBQUMsVUFBVSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQ3JCLG9CQUFDLEtBQUssQ0FBQyxRQUFRO0lBQ2Isb0JBQUMsTUFBTSxJQUFDLE9BQU8sRUFBQyxVQUFVLHFCQUF3QjtJQUNsRCxvQkFBQyxNQUFNLElBQUMsT0FBTyxFQUFDLFVBQVUsRUFBQyxLQUFLLEVBQUMsU0FBUyxxQkFFakM7SUFDVCxvQkFBQyxNQUFNLElBQUMsT0FBTyxFQUFDLFVBQVUsRUFBQyxLQUFLLEVBQUMsV0FBVyxnQkFFbkM7SUFDVCxvQkFBQyxNQUFNLElBQUMsT0FBTyxFQUFDLFVBQVUsRUFBQyxLQUFLLEVBQUMsV0FBVyxFQUFDLFFBQVEscUJBRTVDO0lBQ1Qsb0JBQUMsTUFBTSxJQUFDLE9BQU8sRUFBQyxVQUFVLEVBQUMsSUFBSSxFQUFDLG1CQUFtQixXQUUxQztJQUNULCtCQUFPLE1BQU0sRUFBQyxTQUFTLEVBQUMsRUFBRSxFQUFDLHNCQUFzQixFQUFDLFFBQVEsUUFBQyxJQUFJLEVBQUMsTUFBTSxHQUFHO0lBQ3pFLCtCQUFPLE9BQU8sRUFBQyxzQkFBc0I7UUFDbkMsb0JBQUMsTUFBTSxJQUFDLE9BQU8sRUFBQyxVQUFVLEVBQUMsU0FBUyxFQUFDLE1BQU0sYUFFbEMsQ0FDSCxDQUNPLENBQ2xCLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCdXR0b24gZnJvbSAnQG1hdGVyaWFsLXVpL2NvcmUvQnV0dG9uJ1xuaW1wb3J0IHsgY3JlYXRlTXVpVGhlbWUgfSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXMnXG5pbXBvcnQgeyBzdG9yaWVzT2YgfSBmcm9tICdAc3Rvcnlib29rL3JlYWN0J1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgbXVpVGhlbWUgfSBmcm9tICdzdG9yeWJvb2stYWRkb24tbWF0ZXJpYWwtdWknXG5pbXBvcnQgeyB0aGVtZSB9IGZyb20gJy4uL3NyYydcblxuY29uc3QgY3VzdG9tVGhlbWUgPSBjcmVhdGVNdWlUaGVtZSh0aGVtZSlcblxuc3Rvcmllc09mKCdCdXR0b25zJywgbW9kdWxlKVxuICAuYWRkRGVjb3JhdG9yKG11aVRoZW1lKFtjdXN0b21UaGVtZV0pKVxuICAuYWRkKCdDb250YWluZWQnLCAoKSA9PiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEJ1dHRvbiB2YXJpYW50PVwiY29udGFpbmVkXCI+RGVmYXVsdCBCdXR0b248L0J1dHRvbj5cbiAgICAgIDxCdXR0b24gdmFyaWFudD1cImNvbnRhaW5lZFwiIGNvbG9yPVwicHJpbWFyeVwiPlxuICAgICAgICBQcmltYXJ5IEJ1dHRvblxuICAgICAgPC9CdXR0b24+XG4gICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJjb250YWluZWRcIiBjb2xvcj1cInNlY29uZGFyeVwiPlxuICAgICAgICBTZWNvbmRhcnlcbiAgICAgIDwvQnV0dG9uPlxuICAgICAgPEJ1dHRvbiB2YXJpYW50PVwiY29udGFpbmVkXCIgY29sb3I9XCJzZWNvbmRhcnlcIiBkaXNhYmxlZD5cbiAgICAgICAgRGlzYWJsZWRcbiAgICAgIDwvQnV0dG9uPlxuICAgICAgPEJ1dHRvbiB2YXJpYW50PVwiY29udGFpbmVkXCIgaHJlZj1cIiNjb250YWluZWQtYnV0dG9uc1wiPlxuICAgICAgICBMaW5rXG4gICAgICA8L0J1dHRvbj5cbiAgICAgIDxpbnB1dCBhY2NlcHQ9XCJpbWFnZS8qXCIgaWQ9XCJjb250YWluZWQtYnV0dG9uLWZpbGVcIiBtdWx0aXBsZSB0eXBlPVwiZmlsZVwiIC8+XG4gICAgICA8bGFiZWwgaHRtbEZvcj1cImNvbnRhaW5lZC1idXR0b24tZmlsZVwiPlxuICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJjb250YWluZWRcIiBjb21wb25lbnQ9XCJzcGFuXCI+XG4gICAgICAgICAgVXBsb2FkXG4gICAgICAgIDwvQnV0dG9uPlxuICAgICAgPC9sYWJlbD5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApKVxuICAuYWRkKCdPdXRsaW5lZCcsICgpID0+IChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJvdXRsaW5lZFwiPkRlZmF1bHQgQnV0dG9uPC9CdXR0b24+XG4gICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJvdXRsaW5lZFwiIGNvbG9yPVwicHJpbWFyeVwiPlxuICAgICAgICBQcmltYXJ5IEJ1dHRvblxuICAgICAgPC9CdXR0b24+XG4gICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJvdXRsaW5lZFwiIGNvbG9yPVwic2Vjb25kYXJ5XCI+XG4gICAgICAgIFNlY29uZGFyeVxuICAgICAgPC9CdXR0b24+XG4gICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJvdXRsaW5lZFwiIGNvbG9yPVwic2Vjb25kYXJ5XCIgZGlzYWJsZWQ+XG4gICAgICAgIERpc2FibGVkXG4gICAgICA8L0J1dHRvbj5cbiAgICAgIDxCdXR0b24gdmFyaWFudD1cIm91dGxpbmVkXCIgaHJlZj1cIiNvdXRsaW5lZC1idXR0b25zXCI+XG4gICAgICAgIExpbmtcbiAgICAgIDwvQnV0dG9uPlxuICAgICAgPGlucHV0IGFjY2VwdD1cImltYWdlLypcIiBpZD1cIm91dGxpbmVkLWJ1dHRvbi1maWxlXCIgbXVsdGlwbGUgdHlwZT1cImZpbGVcIiAvPlxuICAgICAgPGxhYmVsIGh0bWxGb3I9XCJvdXRsaW5lZC1idXR0b24tZmlsZVwiPlxuICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJvdXRsaW5lZFwiIGNvbXBvbmVudD1cInNwYW5cIj5cbiAgICAgICAgICBVcGxvYWRcbiAgICAgICAgPC9CdXR0b24+XG4gICAgICA8L2xhYmVsPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICkpXG4iXX0=