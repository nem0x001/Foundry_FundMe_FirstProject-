import Grid from '@material-ui/core/Grid';
import { createMuiTheme } from '@material-ui/core/styles';
import Typography from '@material-ui/core/Typography';
import { storiesOf } from '@storybook/react';
import React from 'react';
import { muiTheme } from 'storybook-addon-material-ui';
import { CardTitle, KeyValueList, SimpleListCard, SimpleListCardItem, theme, } from '../src';
const customTheme = createMuiTheme(theme);
storiesOf('Cards', module)
    .addDecorator(muiTheme([customTheme]))
    .add('CardTitle', () => (React.createElement(React.Fragment, null,
    React.createElement(CardTitle, null, "Without Divider"),
    React.createElement(CardTitle, { divider: true }, "With Divider"))))
    .add('SimpleListCard', () => (React.createElement(Grid, { container: true },
    React.createElement(Grid, { xs: 4 },
        React.createElement(SimpleListCard, { title: "Recently Created" }, ['jobs', 'distribution', 'jump'].map((text) => (React.createElement(SimpleListCardItem, { key: `simple-list-card-${text}` },
            React.createElement(Typography, null, text)))))))))
    .add('KeyValueList', () => (React.createElement(Grid, { container: true, spacing: 40 },
    React.createElement(Grid, { item: true, xs: 12 },
        React.createElement(Grid, { container: true },
            React.createElement(Grid, { item: true, xs: 4 },
                React.createElement(KeyValueList, { title: "Loading", entries: [], showHead: false, titleize: false })))),
    React.createElement(Grid, { item: true, xs: 12 },
        React.createElement(Grid, { container: true },
            React.createElement(Grid, { item: true, xs: 4 },
                React.createElement(KeyValueList, { entries: [['WITHOUT_TITLE', 'true']], showHead: false, titleize: false })))),
    React.createElement(Grid, { item: true, xs: 12 },
        React.createElement(Grid, { container: true },
            React.createElement(Grid, { item: true, xs: 4 },
                React.createElement(KeyValueList, { title: "With Title", entries: [['WITHOUT_TITLE', 'false']], showHead: false, titleize: false })))))));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZHMuc3Rvcmllcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3N0b3JpZXMvY2FyZHMuc3Rvcmllcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxJQUFJLE1BQU0sd0JBQXdCLENBQUE7QUFDekMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBQ3pELE9BQU8sVUFBVSxNQUFNLDhCQUE4QixDQUFBO0FBQ3JELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQTtBQUM1QyxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUE7QUFDekIsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLDZCQUE2QixDQUFBO0FBQ3RELE9BQU8sRUFDTCxTQUFTLEVBQ1QsWUFBWSxFQUNaLGNBQWMsRUFDZCxrQkFBa0IsRUFDbEIsS0FBSyxHQUNOLE1BQU0sUUFBUSxDQUFBO0FBRWYsTUFBTSxXQUFXLEdBQUcsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFBO0FBRXpDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDO0tBQ3ZCLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0tBQ3JDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FDdEIsb0JBQUMsS0FBSyxDQUFDLFFBQVE7SUFDYixvQkFBQyxTQUFTLDBCQUE0QjtJQUN0QyxvQkFBQyxTQUFTLElBQUMsT0FBTyx5QkFBeUIsQ0FDNUIsQ0FDbEIsQ0FBQztLQUNELEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUMzQixvQkFBQyxJQUFJLElBQUMsU0FBUztJQUNiLG9CQUFDLElBQUksSUFBQyxFQUFFLEVBQUUsQ0FBQztRQUNULG9CQUFDLGNBQWMsSUFBQyxLQUFLLEVBQUMsa0JBQWtCLElBQ3JDLENBQUMsTUFBTSxFQUFFLGNBQWMsRUFBRSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQzlDLG9CQUFDLGtCQUFrQixJQUFDLEdBQUcsRUFBRSxvQkFBb0IsSUFBSSxFQUFFO1lBQ2pELG9CQUFDLFVBQVUsUUFBRSxJQUFJLENBQWMsQ0FDWixDQUN0QixDQUFDLENBQ2EsQ0FDWixDQUNGLENBQ1IsQ0FBQztLQUNELEdBQUcsQ0FBQyxjQUFjLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FDekIsb0JBQUMsSUFBSSxJQUFDLFNBQVMsUUFBQyxPQUFPLEVBQUUsRUFBRTtJQUN6QixvQkFBQyxJQUFJLElBQUMsSUFBSSxRQUFDLEVBQUUsRUFBRSxFQUFFO1FBQ2Ysb0JBQUMsSUFBSSxJQUFDLFNBQVM7WUFDYixvQkFBQyxJQUFJLElBQUMsSUFBSSxRQUFDLEVBQUUsRUFBRSxDQUFDO2dCQUNkLG9CQUFDLFlBQVksSUFDWCxLQUFLLEVBQUMsU0FBUyxFQUNmLE9BQU8sRUFBRSxFQUFFLEVBQ1gsUUFBUSxFQUFFLEtBQUssRUFDZixRQUFRLEVBQUUsS0FBSyxHQUNmLENBQ0csQ0FDRixDQUNGO0lBQ1Asb0JBQUMsSUFBSSxJQUFDLElBQUksUUFBQyxFQUFFLEVBQUUsRUFBRTtRQUNmLG9CQUFDLElBQUksSUFBQyxTQUFTO1lBQ2Isb0JBQUMsSUFBSSxJQUFDLElBQUksUUFBQyxFQUFFLEVBQUUsQ0FBQztnQkFDZCxvQkFBQyxZQUFZLElBQ1gsT0FBTyxFQUFFLENBQUMsQ0FBQyxlQUFlLEVBQUUsTUFBTSxDQUFDLENBQUMsRUFDcEMsUUFBUSxFQUFFLEtBQUssRUFDZixRQUFRLEVBQUUsS0FBSyxHQUNmLENBQ0csQ0FDRixDQUNGO0lBQ1Asb0JBQUMsSUFBSSxJQUFDLElBQUksUUFBQyxFQUFFLEVBQUUsRUFBRTtRQUNmLG9CQUFDLElBQUksSUFBQyxTQUFTO1lBQ2Isb0JBQUMsSUFBSSxJQUFDLElBQUksUUFBQyxFQUFFLEVBQUUsQ0FBQztnQkFDZCxvQkFBQyxZQUFZLElBQ1gsS0FBSyxFQUFDLFlBQVksRUFDbEIsT0FBTyxFQUFFLENBQUMsQ0FBQyxlQUFlLEVBQUUsT0FBTyxDQUFDLENBQUMsRUFDckMsUUFBUSxFQUFFLEtBQUssRUFDZixRQUFRLEVBQUUsS0FBSyxHQUNmLENBQ0csQ0FDRixDQUNGLENBQ0YsQ0FDUixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR3JpZCBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9HcmlkJ1xuaW1wb3J0IHsgY3JlYXRlTXVpVGhlbWUgfSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXMnXG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9UeXBvZ3JhcGh5J1xuaW1wb3J0IHsgc3Rvcmllc09mIH0gZnJvbSAnQHN0b3J5Ym9vay9yZWFjdCdcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG11aVRoZW1lIH0gZnJvbSAnc3Rvcnlib29rLWFkZG9uLW1hdGVyaWFsLXVpJ1xuaW1wb3J0IHtcbiAgQ2FyZFRpdGxlLFxuICBLZXlWYWx1ZUxpc3QsXG4gIFNpbXBsZUxpc3RDYXJkLFxuICBTaW1wbGVMaXN0Q2FyZEl0ZW0sXG4gIHRoZW1lLFxufSBmcm9tICcuLi9zcmMnXG5cbmNvbnN0IGN1c3RvbVRoZW1lID0gY3JlYXRlTXVpVGhlbWUodGhlbWUpXG5cbnN0b3JpZXNPZignQ2FyZHMnLCBtb2R1bGUpXG4gIC5hZGREZWNvcmF0b3IobXVpVGhlbWUoW2N1c3RvbVRoZW1lXSkpXG4gIC5hZGQoJ0NhcmRUaXRsZScsICgpID0+IChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8Q2FyZFRpdGxlPldpdGhvdXQgRGl2aWRlcjwvQ2FyZFRpdGxlPlxuICAgICAgPENhcmRUaXRsZSBkaXZpZGVyPldpdGggRGl2aWRlcjwvQ2FyZFRpdGxlPlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICkpXG4gIC5hZGQoJ1NpbXBsZUxpc3RDYXJkJywgKCkgPT4gKFxuICAgIDxHcmlkIGNvbnRhaW5lcj5cbiAgICAgIDxHcmlkIHhzPXs0fT5cbiAgICAgICAgPFNpbXBsZUxpc3RDYXJkIHRpdGxlPVwiUmVjZW50bHkgQ3JlYXRlZFwiPlxuICAgICAgICAgIHtbJ2pvYnMnLCAnZGlzdHJpYnV0aW9uJywgJ2p1bXAnXS5tYXAoKHRleHQpID0+IChcbiAgICAgICAgICAgIDxTaW1wbGVMaXN0Q2FyZEl0ZW0ga2V5PXtgc2ltcGxlLWxpc3QtY2FyZC0ke3RleHR9YH0+XG4gICAgICAgICAgICAgIDxUeXBvZ3JhcGh5Pnt0ZXh0fTwvVHlwb2dyYXBoeT5cbiAgICAgICAgICAgIDwvU2ltcGxlTGlzdENhcmRJdGVtPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L1NpbXBsZUxpc3RDYXJkPlxuICAgICAgPC9HcmlkPlxuICAgIDwvR3JpZD5cbiAgKSlcbiAgLmFkZCgnS2V5VmFsdWVMaXN0JywgKCkgPT4gKFxuICAgIDxHcmlkIGNvbnRhaW5lciBzcGFjaW5nPXs0MH0+XG4gICAgICA8R3JpZCBpdGVtIHhzPXsxMn0+XG4gICAgICAgIDxHcmlkIGNvbnRhaW5lcj5cbiAgICAgICAgICA8R3JpZCBpdGVtIHhzPXs0fT5cbiAgICAgICAgICAgIDxLZXlWYWx1ZUxpc3RcbiAgICAgICAgICAgICAgdGl0bGU9XCJMb2FkaW5nXCJcbiAgICAgICAgICAgICAgZW50cmllcz17W119XG4gICAgICAgICAgICAgIHNob3dIZWFkPXtmYWxzZX1cbiAgICAgICAgICAgICAgdGl0bGVpemU9e2ZhbHNlfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L0dyaWQ+XG4gICAgICAgIDwvR3JpZD5cbiAgICAgIDwvR3JpZD5cbiAgICAgIDxHcmlkIGl0ZW0geHM9ezEyfT5cbiAgICAgICAgPEdyaWQgY29udGFpbmVyPlxuICAgICAgICAgIDxHcmlkIGl0ZW0geHM9ezR9PlxuICAgICAgICAgICAgPEtleVZhbHVlTGlzdFxuICAgICAgICAgICAgICBlbnRyaWVzPXtbWydXSVRIT1VUX1RJVExFJywgJ3RydWUnXV19XG4gICAgICAgICAgICAgIHNob3dIZWFkPXtmYWxzZX1cbiAgICAgICAgICAgICAgdGl0bGVpemU9e2ZhbHNlfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L0dyaWQ+XG4gICAgICAgIDwvR3JpZD5cbiAgICAgIDwvR3JpZD5cbiAgICAgIDxHcmlkIGl0ZW0geHM9ezEyfT5cbiAgICAgICAgPEdyaWQgY29udGFpbmVyPlxuICAgICAgICAgIDxHcmlkIGl0ZW0geHM9ezR9PlxuICAgICAgICAgICAgPEtleVZhbHVlTGlzdFxuICAgICAgICAgICAgICB0aXRsZT1cIldpdGggVGl0bGVcIlxuICAgICAgICAgICAgICBlbnRyaWVzPXtbWydXSVRIT1VUX1RJVExFJywgJ2ZhbHNlJ11dfVxuICAgICAgICAgICAgICBzaG93SGVhZD17ZmFsc2V9XG4gICAgICAgICAgICAgIHRpdGxlaXplPXtmYWxzZX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9HcmlkPlxuICAgICAgICA8L0dyaWQ+XG4gICAgICA8L0dyaWQ+XG4gICAgPC9HcmlkPlxuICApKVxuIl19