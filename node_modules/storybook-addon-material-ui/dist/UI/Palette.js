"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _core = require("@emotion/core");

var _styled = _interopRequireDefault(require("@emotion/styled"));

var _reactInspector = require("react-inspector");

var _styles = require("@material-ui/core/styles");

var _colorPicker = _interopRequireDefault(require("@usulpro/color-picker"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _templateObject7() {
  var data = _taggedTemplateLiteral(["\n      background-color: rgba(0, 0, 0, 0.1);\n      width: 80px;\n      padding-left: 4px;\n    "]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["\n      background-color: ", ";\n      width: 1px;\n      flex-grow: 1;\n      border: 1px solid ", ";\n      border: ", ";\n      cursor: ", ";\n    "]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n      display: flex;\n      justify-content: space-between;\n      height: 20px;\n      margin: 2px;\n      margin-bottom: ", ";\n      margin-top: ", ";\n    "]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n  margin-left: 2px;\n  margin-top: 8px;\n  color: hsl(0, 0%, 30%);\n  & input {\n    margin-right: 4px;\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  width: 70%;\n  max-width: 500px;\n  min-width: 250px;\n  background-color: hsl(0, 0%, 50%);\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  position: absolute;\n  background-color: hsl(0, 0%, 0%, 0.8);\n  left: 0px;\n  right: 0px;\n  top: 0px;\n  bottom: 0px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  height: 1px;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: ", ";\n  color: ", ";\n  label: PaletteHolder;\n  padding: 8px;\n  position: relative;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var sortObjectKeys = function sortObjectKeys(a, b) {
  if (a === 'themeName') return -2;
  if (b === 'themeName') return 2;
  if (a === 'palette') return -1;
  if (b === 'palette') return 1;
  return a.charCodeAt(0) - b.charCodeAt(0);
};

var PaletteHolder = (0, _styled.default)('div')(_templateObject(), function (props) {
  return props.dark ? 'hsl(0, 0%, 44%)' : 'hsl(0, 0%, 90%)';
}, function (props) {
  return props.dark ? 'hsl(0, 0%, 90%)' : 'hsl(0, 0%, 44%)';
});
var PickerOverlap = (0, _styled.default)('div')(_templateObject2());
var PickerHolder = (0, _styled.default)('div')(_templateObject3());
var ColorInput = (0, _styled.default)('div')(_templateObject4());

var Palette =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Palette, _React$Component);

  function Palette() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Palette);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Palette)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      isPickerOpen: false,
      editColor: '',
      palette: _this.props.theme.palette,
      path: []
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "prevColor", '');

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onChange", function () {
      _this.props.onChangePalette(_this.state.palette);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setPath", function (path, isPickerOpen) {
      return function () {
        var palette = _this.state.palette;

        _this.setState({
          path: path,
          editColor: (0, _styles.createMuiTheme)({
            palette: palette
          }).palette[path[0]][path[1]],
          isPickerOpen: isPickerOpen
        }, function () {
          _this.prevColor = _this.state.editColor;
        });
      };
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "updPalette", function (ev, cb) {
      var _this$state = _this.state,
          path = _this$state.path,
          palette = _this$state.palette;
      var editColor = ev.target.value || _this.prevColor;

      var newPalette = _objectSpread({}, palette, _defineProperty({}, path[0], _objectSpread({}, palette[path[0]], _defineProperty({}, path[1], editColor))));

      _this.setState({
        editColor: editColor,
        palette: newPalette
      }, cb);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onSubmit", function (ev) {
      _this.updPalette(ev, function () {
        _this.onChange();

        _this.setState({
          isPickerOpen: false
        });

        _this.prevColor = _this.state.editColor;
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onReset", function (ev) {
      _this.updPalette(ev, function () {
        _this.onChange();

        _this.setState({
          isPickerOpen: false
        });
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onHover", function (ev) {
      _this.updPalette(ev, function () {
        _this.onChange();
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "renderColorInput", function () {
      return _react.default.createElement(ColorInput, null, _react.default.createElement("input", {
        type: "text",
        onChange: _this.updPalette,
        value: _this.state.editColor
      }), _react.default.createElement("button", {
        onClick: _this.onChange
      }, "ok"));
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "renderColorSet", function (colorSet, name, isDark) {
      var main = colorSet.main,
          light = colorSet.light,
          dark = colorSet.dark,
          contrastText = colorSet.contrastText;
      var Plate = (0, _styled.default)('div')(_templateObject5(), function (props) {
        return props.up ? '0px' : '2px';
      }, function (props) {
        return !props.up ? '0px' : '2px';
      });
      var ColorBox = (0, _styled.default)('div')(_templateObject6(), function (props) {
        return props.color || 'rgba(0, 0, 0, 0.1)';
      }, isDark ? 'hsl(0, 0%, 80%)' : 'hsl(0, 0%, 44%)', function (props) {
        return props.color ? '' : 'none';
      }, function (props) {
        return props.color ? 'pointer' : 'text';
      });
      var ColorName = (0, _styled.default)('div')(_templateObject7());
      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(Plate, {
        up: true
      }, _react.default.createElement(ColorName, null, name), _react.default.createElement(ColorBox, {
        color: light,
        onClick: _this.setPath([name, 'light'], true)
      }), _react.default.createElement(ColorBox, {
        color: main,
        onClick: _this.setPath([name, 'main'], true)
      }), _react.default.createElement(ColorBox, {
        color: dark,
        onClick: _this.setPath([name, 'dark'], true)
      }), _react.default.createElement(ColorBox, {
        color: contrastText,
        onClick: _this.setPath([name, 'contrastText'], true)
      })), _react.default.createElement(Plate, null, _react.default.createElement(ColorName, null), _react.default.createElement(ColorBox, {
        onClick: _this.setPath([name, 'light'])
      }, "light: ".concat(light)), _react.default.createElement(ColorBox, {
        onClick: _this.setPath([name, 'main'])
      }, "main: ".concat(main)), _react.default.createElement(ColorBox, {
        onClick: _this.setPath([name, 'dark'])
      }, "dark: ".concat(dark)), _react.default.createElement(ColorBox, {
        onClick: _this.setPath([name, 'contrastText'])
      }, "contrastText: ".concat(contrastText))));
    });

    return _this;
  }

  _createClass(Palette, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _createMuiTheme = (0, _styles.createMuiTheme)({
        palette: this.state.palette
      }),
          palette = _createMuiTheme.palette;

      var colorSet = function colorSet(name) {
        return _this2.renderColorSet(palette[name], name, _this2.state.palette.type === 'dark');
      };

      return _react.default.createElement(PaletteHolder, {
        dark: this.state.palette.type === 'dark'
      }, colorSet('primary'), colorSet('secondary'), colorSet('error'), this.renderColorInput(), this.state.isPickerOpen && _react.default.createElement(PickerOverlap, null, _react.default.createElement(PickerHolder, null, _react.default.createElement(_colorPicker.default, {
        initColor: this.prevColor,
        onSubmit: this.onSubmit,
        onSelect: this.onHover,
        onHover: this.onHover,
        onReset: this.onReset
      }))));
    }
  }]);

  return Palette;
}(_react.default.Component);

exports.default = Palette;

_defineProperty(Palette, "propTypes", {
  theme: _propTypes.default.shape()
});